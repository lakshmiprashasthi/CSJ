abstract class Shape {
    abstract double area();  
}

class Circle extends Shape {
    double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    @Override
    double area() {
        return Math.PI * radius * radius;
    }
}

class Rectangle extends Shape {
    double length, width;

    public Rectangle(double length, double width) {
        this.length = length;
        this.width = width;
    }

    @Override
    double area() {
        return length * width;
    }
}


interface Playable {
    void play();  
}

class Guitar implements Playable {
    @Override
    public void play() {
        System.out.println("Strumming the guitar...");
    }
}

class Drum implements Playable {
    @Override
    public void play() {
        System.out.println("Beating the drum...");
    }
}

public class Main {
    public static void main(String[] args) {

        Shape circle = new Circle(7);
        Shape rectangle = new Rectangle(5, 10);

        System.out.println("Area of Circle: " + circle.area());
        System.out.println("Area of Rectangle: " + rectangle.area());

        System.out.println("-----------------------------");

        Playable guitar = new Guitar();
        Playable drum = new Drum();

        guitar.play();  
        drum.play();    
    }
}
